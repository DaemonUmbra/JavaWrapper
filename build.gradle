plugins {
	id 'org.echocat.golang' version '0.1.13'
	id 'maven-publish'
}


version = project.version
group 'github.com/MinecraftForge/JavaWrapper'
golang {
	platforms = System.getProperty("platforms", project.platforms)

	// packageName = project.name
	dependencies {
		build 'github.com/fatih/color'
		build 'github.com/ulikunitz/xz/lzma'
		build 'github.com/kardianos/osext'

	//Hack to fix the build
	deleteAllCachedDependenciesOnClean = true
	}

	build {
		excludes = [
			'.git/**',
			'build.gradle',
			'build/**',
			'.gradle/**',
			'gradle/**'
		]

	useTemporaryGopath = true
	//Manully change the output directory 
	outputFilenamePattern = "$buildDir/out/$project.binname-v$project.version-%{platform}%{extension}"
	}
}

task renameBin(type: Copy) {
	dependsOn baseBuild
	from("$buildDir/out/")
	into("$buildDir/out/")
	rename("$project.binname-v$project.version-windows-386.exe", "$project.binname-v$project.version-win.exe")
	rename("$project.binname-v$project.version-linux-386", "$project.binname-v$project.version-linux")
	rename("$project.binname-v$project.version-darwin-amd64", "$project.binname-v$project.version-osx")

}

def baseInclude = "${project.binname}-v${project.version}"
task pkgWindows(type: Zip) {
	dependsOn renameBin
	baseName = "$project.binname-Win"
	version = project.version
	destinationDir file("${buildDir}/pkg")
	from "$buildDir/out/"
	include '*.exe'
}

task pkgOsx(type: Tar) {
	 dependsOn renameBin
	 baseName = "$project.binname-Osx"
	 version = project.version
	 extension = 'tar.gz'
	 destinationDir file("${buildDir}/pkg")
	 compression = Compression.GZIP
	 from "$buildDir/out/"
	 include "$baseInclude-osx"
}

task pkgLinux(type: Tar) {
	 dependsOn renameBin
	 baseName = "$project.binname-Linux"
	 version = project.version
	 extension = 'tar.gz'
	 destinationDir file("${buildDir}/pkg")
	 compression = Compression.GZIP
	 from "$buildDir/out/"
	 include "$baseInclude-linux"
}

task pkg() {
	dependsOn pkgLinux, pkgOsx, pkgWindows
	description 'Creates package for each platform'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}

publishing {
	repositories {
		maven {
			name  'Forge Maven'
			credentials {
				username 'forge'
				password "$project.forgeMvnPass"

			}
			url "http://files.minecraftforge.net/maven/manage/upload"
		}
	}
	publications {
		maven(MavenPublication) {
			groupId 'net.minecraftforge.javawrapper'
			artifactId 'javawrapper'
			artifact(pkgWindows) {
				classifier 'win'
			}
			artifact(pkgOsx) {
				classifier 'osx'
			}
			artifact(pkgLinux) {
				classifier 'linux'
			}
		}
	}
}

