buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'io.github.illyohs.binaryappender:BinaryAppender:1.0.2'
	}
}

plugins {
	id 'org.echocat.golang' version '0.1.13'
}

version = project.version
golang {
	platforms = System.getProperty("platforms", project.platforms)

        packageName = project.grp

	dependencies {
		build 'github.com/fatih/color'
		build 'github.com/ulikunitz/xz/lzma'
		build 'github.com/kardianos/osext'

		//Hack to fix the build
		deleteAllCachedDependenciesOnClean = true

	}

	build {

		excludes = [
			'.git/**',
			'build.gradle',
			'build/**',
			'.gradle/**',
			'gradle/**'
		]

		useTemporaryGopath = true
		//Manully change the output directory it will out b
		outputFilenamePattern = '../out/' + project.binname + '-v' + project.version + '-%{platform}%{extension}'
	}

}

task pkgWin(type: Zip, dependsOn: ["build"]) {
	from("${buildDir}/out/")
	include "*.exe"
	archiveName "windows-v${project.version}.zip"
	destinationDir file("${buildDir}/pkg")
}

task pkgLinux(type: Tar, dependsOn: ["build"]) {
	from("${buildDir}/out/")
	include "${project.binname}-v${project.version}-linux-amd64"
	archiveName "Linux-v${project.version}.tar.gz"
	compression = Compression.GZIP	
	destinationDir file("${buildDir}/pkg")
}



task pkgOsx(type: Tar, dependsOn: ["build"]) {
	from("${buildDir}/out/")
	include "${project.binname}-v${project.version}-darwin-amd64"
	archiveName "Osx-v${project.version}.tar.gz"
	compression = Compression.GZIP	
	destinationDir file("${buildDir}/pkg")
}


task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}

task prepGJW(type: Copy) {
	mkdir("${buildDir}/gjw/")	
	from "${buildDir}/out/"
	into "${buildDir}/gjw"
}

import io.github.illyohs.binaryappender.BinaryAppender
task makeGJW(dependsOn: ["prepGJW"] ) {

	def dirJar = new File(project.appendjar)

	def dirOsx = new File("${buildDir}/gjw/ForgePreloader-v1.0.0-darwin-amd6")
	def dirLinux = new File("${buildDir}/gjw/ForgePreloader-v1.0.0-linux-386")
	def dirWindows = new File("${buildDir}/gjw/ForgePreloader-v1.0.0-windows-386.exe")

	File jr = new File("forge-1.11-13.19.1.2199-installer.jar");
	File linuxd = new File("./build/gjw/${project.binname}-v${project.version}-v1.0.0-linux-38e");
	
	doLast {
	BinaryAppender.appendBinary(jr, linuxd)
	}
	//BinaryAppender.appendBinary(dirJar, dirLinux)
	//BinaryAppender.appendBinary(dirJar, dirWindows)

}

//Create a Genertic Java Wrapper
//task createGJW(type: Copy, dependsOn:["build"]) {
//
//	//Create wrapper
//	file("${buildDir}/gjwrapper/v" + project.version).mkdirs()
//
//	//Copy Files into the gjw dir
//	from "${buildDir}/out"
//	into "${buildDir}/gjwrapper/v" + project.version
//	include "."
//}
